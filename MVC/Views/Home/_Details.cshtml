@model MVC.ViewModel.BookDetailsAndSuggestionsViewModel

@{
    var cart = Session["Cart"] as BusinessLayer.ShoppingCartModel;
    int bookInCart = 0;
    if (cart != null)
    {
        bookInCart = cart.GetTotalBookInCart(Model.Book.ISBN);

    }

}




<div id="divList">
    <div class="row">
        <br />

        <div class="large-2 columns">
            <br />
            <img src="@Html.DisplayFor(model => model.Book.ImagePath)">

            @if (Model.Book.QuantityInStock == 0)
            {
                <div style="color:red">
                    <div style="float:left; margin-right:10px;">
                        @Html.DisplayNameFor(model => model.Book.QuantityInStock)
                    </div>

                    <div>
                        @Html.DisplayFor(model => model.Book.QuantityInStock)
                    </div>
                </div>
            }
            else
            {
                <div style="color:green">
                    <div style="float:left; margin-right:10px;">
                        @Html.DisplayNameFor(model => model.Book.QuantityInStock)
                    </div>

                    <div id="inStock">
                        @(Model.Book.QuantityInStock - bookInCart)
                    </div>
                </div>
            }

        </div>
        <div class="large-10 columns">
            <h4>@Html.DisplayFor(model => model.Book.Title)</h4>
            <div style="float:left; ">
                av @foreach (var item in Model.Book.Authors)
                {

                    <h3 class="title"> @Html.DisplayFor(modelItem => item.DisplayFullName),</h3>

                }
                <h3 class="title">  @Html.DisplayFor(model => model.Book.Format.Name), @Html.DisplayFor(model => model.Book.Language.Name), @Html.DisplayFor(model => model.Book.PublishingDate.Year)</h3>
            </div>


            <div style="margin-left:700px;">
                <h3 class="price-detail-look">@Html.DisplayFor(model => model.Book.Price) kr   </h3>
                @if (Model.Book.QuantityInStock == 0)
                {
                    <button class="small button ">Tillfälligt slut</button>
                }
                else
                {

                    using (Ajax.BeginForm("AddToCartWidget", "ShoppingCart", new { id = Model.Book.Id },
                    new AjaxOptions { UpdateTargetId = "cart", OnComplete = "updateCart(" + @Model.Book.Id + ")" }))
                    {
                        if (Model.Book.QuantityInStock - bookInCart == 0)
                        {
                            <div id="Shop">
                                <button class="small button ">Tillfälligt slut</button>
                            </div>
                        }
                        else
                        {
                            <div id="Shop">
                                @Html.HiddenFor(x => x.BookId)
                                @Html.Hidden("returnUrl", Request.Url.PathAndQuery)
                                <button id="@Model.Book.Id-Add" class="small button addToCart" data-bookincart=@bookInCart data-bookinstock=@(Model.Book.QuantityInStock - bookInCart)>Lägg i varukorg</button>


                            </div>
                        }

                    }


                }


            </div>
        </div>
    </div>
    <div class="row" style="margin-top:-220px">
        <div class="large-2 columns"><p></p></div>
        <div class="large-10 columns " style="height:100px; overflow:auto;">

            <p class="description">@Html.DisplayFor(model => model.Book.Description)</p>
        </div>
    </div>
    <div class="row" >
        <div class="large-2 columns"><p></p></div>
        <div class="large-10 columns" style="margin-top:20px">
            <table class="info" >
                <tr>

                    <th>
                        @Html.DisplayNameFor(model => model.Book.PageNumber)
                    </th>
                    <td>
                        @Html.DisplayFor(model => model.Book.PageNumber) sidor
                    </td>
                    <th>
                        @Html.DisplayNameFor(model => model.Book.PublishingDate)
                    </th>

                    <td>
                        @Html.DisplayFor(model => model.Book.PublishingDate.Year)


                    <th>
                        @Html.DisplayName("Författare:")
                    </th>

                    <td>
                        @foreach (var item in Model.Book.Authors)
                        {
                            <div>

                                @Html.DisplayFor(modelItem => item.DisplayFullName),

                            </div>

                        }
                    </td>



                </tr>

                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Book.ISBN)
                    </th>
                    <td>
                        @Html.DisplayFor(model => model.Book.ISBN)
                    </td>
                    <th>
                        @Html.DisplayNameFor(model => model.Book.Publisher.Name)
                    </th>

                    <td>
                        @Html.DisplayFor(model => model.Book.Publisher.Name)
                    </td>

                </tr>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Book.Weight)
                    </th>
                    <td>
                        @Html.DisplayFor(model => model.Book.Weight) gr
                    </td>
                    <th>
                        @Html.DisplayNameFor(model => model.Book.Language.Name)
                    </th>

                    <td>
                        @Html.DisplayFor(model => model.Book.Language.Name)
                    </td>
                   

                </tr>

            </table>


        </div>
    </div>
    <div class="row">
        <div class="large-2 columns"><p></p></div>
        <div class="large-10 columns" style="margin-top:20px">
            <h3 class="title">  Genre:</h3>
            @foreach (var item in Model.Book.Genres)
            {

                <h3 class="title" style="float:left; margin-right:5px;"> @Html.DisplayFor(modelItem => item.Name), </h3>

            }


        </div>

    </div>

    @Html.Partial("_Suggestions")
    @*<div class="row">
        <hr>
        <div class="large-12 columns">
            <h4>Böcker i samma genre:</h4>
            <img src="http://placehold.it/200x150&text=[img]">
            <img src="http://placehold.it/200x150&text=[img]">
            <img src="http://placehold.it/200x150&text=[img]">
            <img src="http://placehold.it/200x150&text=[img]">
        </div>
    </div>*@
                            @*<table class="table">


                                    @foreach (var item in Model.Suggestions)
                                    {
                                        <tr>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.Title)
                                            </td>
                                            <td>
                                                @Html.DisplayFor(modelItem => item.ImagePath)
                                            </td>

                                        </tr>
                                    }

                                </table>*@

                    </div>
