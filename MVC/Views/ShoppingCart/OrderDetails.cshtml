@model MVC.ViewModel.ContactViewModel

@*@using (Ajax.BeginForm("ProcessOrder", "ShoppingCart", FormMethod.Post))*@

    @using (Ajax.BeginForm("ProcessOrder", "ShoppingCart", null,
            new AjaxOptions { UpdateTargetId = "divList", OnSuccess = "submitOrder" }, new { id = "ProcessOrder" }))
    {
    @Html.AntiForgeryToken()
    
    <div class="">
        <h4>Ange dina uppgifter</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "error" })
        <div class="form-group">
            @Html.LabelFor(model => model.Contact.SocialSecurityNumber, htmlAttributes: new { @class = "control-label col-md-2", style = "float:left; margin-right:8px;" }) <p class="pn "> (ÅÅMMDD-NNNN)</p>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Contact.SocialSecurityNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Contact.SocialSecurityNumber, "", new { @class = "error" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Contact.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Contact.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Contact.FirstName, "", new { @class = "error" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Contact.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Contact.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Contact.LastName, "", new { @class = "error" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address.Street, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address.Street, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address.Street, "", new { @class = "error" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address.ZipCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address.ZipCode, "", new { @class = "error" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address.City, "", new { @class = "error" })
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Contact.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Contact.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Contact.Email, "", new { @class = "error" })
            </div>
        </div>

        <div class="form-group">
           
            <div class="col-md-10">
                @Html.LabelFor(model => model.Contact.CellPhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                @Html.EditorFor(model => model.Contact.CellPhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Contact.CellPhoneNumber, "", new { @class = "error" })
            </div>
        </div>
        
    </div>
    <div class="form-group">
        <div class="col-md-10">
            @Html.LabelFor(model => model.SelectedPaymentId, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.DropDownListFor(model => model.SelectedPaymentId,

            new SelectList(Model.PaymentTypeList, "Id", "Name"), "--Välj--")
            @Html.ValidationMessageFor(model => model.SelectedPaymentId, "", new { @class = "error" })
        </div>
        
        </div>
    <div class="form-group">
        <div class="col-md-10">
            @Html.LabelFor(model => model.SelectedDeliveryId, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.DropDownListFor(model => model.SelectedDeliveryId,

            new SelectList(Model.DeliveryTypeList, "Id", "Name"), "--Välj--")
            @Html.ValidationMessageFor(model => model.SelectedDeliveryId, "", new { @class = "error" })
        </div>
        </div>
    <div class="form-group">

        <div class="col-md-10">
            @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.TextAreaFor(model => model.Comment, new { rows = 10, columns = 40 })
            @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "error" })
        </div>
    </div>

        @Html.HiddenFor(x => x.ReturnUrl)
        <div class="text-center">
            <input id="btnSubmit" type="submit" class="button" value="Genomför köp" />

        </div>

    }



        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>

